!function(){"use strict";var e={960:function(e,t,r){e.exports=r.p+"df100efc54d4645073d7.jpg"},656:function(e,t,r){e.exports=r.p+"8edfe6cd78e39aafc871.jpg"},822:function(e,t,r){e.exports=r.p+"44e6fede87f55e5327cc.jpg"},328:function(e,t,r){e.exports=r.p+"e463b225f0897d749d63.jpg"},994:function(e,t,r){e.exports=r.p+"70aac30a40409c4dbc71.jpg"},339:function(e,t,r){e.exports=r.p+"2e37fd0c260a298af732.jpg"}},t={};function r(s){var i=t[s];if(void 0!==i)return i.exports;var o=t[s]={exports:{}};return e[s](o,o.exports,r),o.exports}r.m=e,r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r.b=document.baseURI||self.location.href,function(){new URL(r(339),r.b),new URL(r(822),r.b),new URL(r(960),r.b),new URL(r(328),r.b),new URL(r(994),r.b),new URL(r(656),r.b);const e={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__form-button",inactiveButtonClass:"modal__form-button_disabled",inputErrorClass:"modal__form-input_type_error",errorClass:"modal__error_visible"};class t{constructor(e,t,r){let{data:s,handleImageClick:i,deleteCardModal:o,handleLike:n}=e;var a,l,d;a=this,d=()=>{this._cardElement.remove()},(l=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(l="handleDeleteCard"))in a?Object.defineProperty(a,l,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[l]=d,this._cardSelector=t,this._handleImageClick=i,this._deleteCardModal=o,this._handleLike=n,this._userId=r,this._name=s.name,this._link=s.link,this._id=s._id,this._likes=s.likes,this._ownerId=s.owner._id,this._cardTemplate=document.querySelector(this._cardSelector).content.firstElementChild}_setEventListeners(){this._cardHeartButton.addEventListener("click",this._handleLike),this._cardDeleteButton.addEventListener("click",this._deleteCardModal),this._cardImage.addEventListener("click",this._handleImageClick)}updateLikes(e){this._likes=e,this._renderLikes()}_renderLikes(){this.isLiked()?this._cardHeartButton.classList.add("card__heart-button-active"):this._cardHeartButton.classList.remove("card__heart-button-active"),this._cardLikes.textContent=this._likes.length}isLiked(){return this._likes.some((e=>e._id===this._userId))}getView(){return this._cardElement=this._cardTemplate.cloneNode(!0),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardHeartButton=this._cardElement.querySelector(".card__heart-button"),this._cardDeleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardLikes=this._cardElement.querySelector(".card__likes"),this._renderLikes(),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._userId!=this._ownerId&&this._cardDeleteButton.remove(),console.log("UserID: "+this._userId),console.log("OwnerID: "+this._ownerId),this._cardElement}}class s{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector("#"+e.id+"-error");e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector("#"+e.id+"-error");e.classList.remove(this._inputErrorClass),t.textContent=" ",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class i{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItems(e){this._container.prepend(e)}}class o{constructor(e){this._popupElement=document.querySelector(e),this._exitButtonElement=this._popupElement.querySelector(".modal__exit-button"),this._handleEscClose=this._handleEscClose.bind(this)}openModal(){this._popupElement.classList.add("modal__opened"),document.addEventListener("keyup",this._handleEscClose)}closeModal(){this._popupElement.classList.remove("modal__opened"),document.removeEventListener("keyup",this._handleEscClose)}setEventListeners(){this._popupElement.addEventListener("mousedown",this._handleOutsideClose.bind(this)),this._exitButtonElement.addEventListener("click",this.closeModal.bind(this))}_handleEscClose(e){"Escape"==e.key&&this.closeModal()}_handleOutsideClose(e){e.target.classList.contains("modal")&&this.closeModal()}}class n extends o{constructor(e,t){var r,s,i;super(e),r=this,i=e=>{e.preventDefault(),this._handleFormSubmit(this.getInputValues())},(s=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(s="_handleSubmit"))in r?Object.defineProperty(r,s,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[s]=i,this._handleFormSubmit=t,this._modalForm=this._popupElement.querySelector(".modal__form"),this._modalFormInputs=this._popupElement.querySelectorAll(".modal__form-input"),this._modalFormButton=this._popupElement.querySelector(".modal__form-button")}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",this._handleSubmit)}getInputValues(){const e={};return this._modalFormInputs.forEach((t=>e[t.name]=t.value)),e}closeModal(){super.closeModal(),this._modalForm.reset()}}const a=new class{constructor(e,t){var r,s,i;r=this,i=e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`),(s=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(s="_processResponse"))in r?Object.defineProperty(r,s,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[s]=i,this.baseUrl=e,this.options=t}getUserInfo(){return fetch(`${this.baseUrl}/users/me`,{method:"GET",headers:this.options}).then(this._processResponse)}getInitialCards(){return fetch(`${this.baseUrl}/cards`,{method:"GET",headers:this.options}).then(this._processResponse)}getCardLikes(e){return fetch(`${this.baseUrl}/cards/likes/${e}`,{method:"GET",headers:this.options}).then(this._processResponse)}editUserProfile(e){return fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.options,body:JSON.stringify({name:e.name,about:e.description})}).then(this._processResponse)}addNewCard(e){return fetch(`${this.baseUrl}/cards`,{method:"POST",headers:this.options,body:JSON.stringify({name:e.name,link:e.link})}).then(this._processResponse)}deleteCard(e){return fetch(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.options}).then(this._processResponse)}addLike(e){return fetch(`${this.baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this.options}).then(this._processResponse)}removeLike(e){return fetch(`${this.baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this.options}).then(this._processResponse)}updateProfilePicture(e){return fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.options,body:JSON.stringify({avatar:e.link})}).then(this._processResponse)}}("https://around.nomoreparties.co/v1/group-12",{authorization:"233760b2-865b-418c-a988-0a5daaaf7846","Content-Type":"application/json"}),l=new class extends o{constructor(e){super(e),this._cardPreviewImage=this._popupElement.querySelector(".modal__preview-image"),this._cardPreviewTitle=this._popupElement.querySelector(".modal__preview-title")}openModal(e,t){this._cardPreviewImage.src=t,this._cardPreviewImage.alt=e,this._cardPreviewTitle.textContent=e,super.openModal()}}("#image-preview");l.setEventListeners();const d=new class extends o{constructor(e){var t,r,s;super(e),t=this,s=e=>{e.preventDefault(),this._handleFormSubmit()},(r=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var s=r.call(e,"string");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(r="_handleSubmit"))in t?Object.defineProperty(t,r,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[r]=s,this._modalForm=this._popupElement.querySelector(".modal__form"),this._modalFormButton=this._popupElement.querySelector(".modal__form-button")}openModal(e){this._handleFormSubmit=e,super.openModal()}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",this._handleSubmit)}closeModal(){super.closeModal(),this._modalForm.reset()}}("#confirmation");d.setEventListeners();const c=document.querySelector("#confirmationSaveButton");function u(e){const r=new t({data:e,handleImageClick:()=>{l.openModal(e.name,e.link)},deleteCardModal:()=>{d.openModal((()=>{M(c,!0),a.deleteCard(e._id).then((()=>{d.closeModal(),r.handleDeleteCard()})).catch((e=>{console.log(e)})).finally((()=>{M(c,!1)}))}))},handleLike:()=>{r.isLiked()?a.removeLike(r._id).then((e=>{r.updateLikes(e.likes)})).catch((()=>e=>console.log(e))):a.addLike(r._id).then((e=>{r.updateLikes(e.likes)})).catch((()=>e=>console.log(e)))}},"#card-template",m);return r.getView()}let h,m;Promise.all([a.getUserInfo(),a.getInitialCards()]).then((e=>{let[t,r]=e;g.setProfileInfo(t.name,t.about),g.setProfileImage(t.avatar),m=t._id,h=new i({items:r,renderer:e=>{const t=u(e);h.addItems(t)}},".cards__list"),h.renderItems()})).catch((e=>console.log(e)));const _=document.querySelector(".profile__edit-button"),p=document.querySelector(".profile__add-button"),f=document.querySelector(".profile__image-edit"),v=document.querySelector("#editProfileForm"),b=document.querySelector("#profileName"),E=document.querySelector("#profileDescription"),g=(document.querySelector("#profileSaveButton"),new class{constructor(e,t,r){this._profileNameElement=document.querySelector(e),this._profileDescriptionElement=document.querySelector(t),this._profileImageElement=document.querySelector(r)}setProfileInfo(e,t){this._profileNameElement.textContent=e,this._profileDescriptionElement.textContent=t}setProfileImage(e){this._profileImageElement.src=e,this._profileImageElement.alt=this._profileNameElement.textContent}getProfileInfo(){return{name:this._profileNameElement.textContent,description:this._profileDescriptionElement.textContent}}}(".profile__title",".profile__description",".profile__image")),y=new s(e,v);y.enableValidation();const S=document.querySelector("#profileSaveButton"),L=new n("#profileEdit",(()=>{const e=L.getInputValues();M(S,!0),a.editUserProfile(e).then((()=>{const t=e.name,r=e.description;g.setProfileInfo(t,r),L.closeModal()})).catch((e=>console.log(e))).finally((()=>{M(S,!1)}))}));L.setEventListeners(),_.addEventListener("click",(()=>{!function(){const{name:e,description:t}=g.getProfileInfo();b.value=e,E.value=t}(),L.openModal(),y.toggleButtonState()}));const C=document.querySelector("#addCardForm"),I=document.querySelector("#addCreateButton"),k=new s(e,C);k.enableValidation();const w=new n("#addCard",(()=>{const e=w.getInputValues();M(I,!0),a.addNewCard(e).then((e=>{const t=u(e);h.addItems(t),w.closeModal()})).catch((e=>console.log(e))).finally((()=>{M(I,!1)}))}));w.setEventListeners(),p.addEventListener("click",(()=>{w.openModal(),k.toggleButtonState()}));const P=document.querySelector("#profilePictureForm"),q=document.querySelector("#profilePictureSave");new s(e,P).enableValidation();const B=new n("#changeProfilePicture",(()=>{const e=B.getInputValues();M(q,!0),a.updateProfilePicture(e).then((()=>{const t=e.link;g.setProfileImage(t),B.closeModal()})).catch((e=>console.log(e))).finally((()=>{M(q,!1)}))}));let x;function M(e,t){t?(x=e.textContent,e.textContent="Saving..."):e.textContent=x}B.setEventListeners(),f.addEventListener("click",(()=>{B.openModal(),y.toggleButtonState()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,